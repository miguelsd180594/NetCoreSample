// <auto-generated />
using System;
using Belatrix.Final.WebApi.Repository.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Belatrix.Final.WebApi.Migrations
{
    [DbContext(typeof(BelatrixFinalDbContext))]
    [Migration("20190625020807_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnName("artist_id");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(160);

                    b.HasKey("AlbumId")
                        .HasName("album_id_pkey");

                    b.HasIndex("ArtistId")
                        .HasName("album_artist_idx");

                    b.ToTable("album");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Company");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("State");

                    b.Property<int?>("SupportRepIdEmployeeId");

                    b.HasKey("CustomerId");

                    b.HasIndex("SupportRepIdEmployeeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("HireDate");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<int?>("ReportsToEmployeeId");

                    b.Property<string>("State");

                    b.Property<string>("Title");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ReportsToEmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillingAddress");

                    b.Property<string>("BillingCity");

                    b.Property<string>("BillingCountry");

                    b.Property<string>("BillingPostalCode");

                    b.Property<string>("BillingState");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<decimal>("Total");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InvoiceId");

                    b.Property<int>("Quantity");

                    b.Property<int>("TrackId");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TrackId");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.MediaType", b =>
                {
                    b.Property<int>("MediaTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("MediaTypeId");

                    b.ToTable("MediaTypes");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("PlaylistId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnName("playlist_id");

                    b.Property<int>("TrackId")
                        .HasColumnName("track_id");

                    b.HasKey("PlaylistId", "TrackId")
                        .HasName("playlist_track_id_pkey");

                    b.HasIndex("TrackId");

                    b.ToTable("playlist_track");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlbumId");

                    b.Property<int>("Bytes");

                    b.Property<string>("Composer");

                    b.Property<int>("GenreId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int>("MediaTypeId");

                    b.Property<int>("MilliSeconds");

                    b.Property<string>("Name");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("TrackId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.HasIndex("MediaTypeId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Album", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("album__reference_artist__idx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Customer", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Employee", "SupportRepId")
                        .WithMany("Customers")
                        .HasForeignKey("SupportRepIdEmployeeId");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Employee", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Employee", "ReportsTo")
                        .WithMany("EmployeesReportsTo")
                        .HasForeignKey("ReportsToEmployeeId");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Invoice", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.InvoiceLine", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Track", "Track")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.PlaylistTrack", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Playlist", "PlayList")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .HasConstraintName("playlist_track__reference_playlist__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Track", "Track")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("playlist_track__reference_track__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Track", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.MediaType", "MediaType")
                        .WithMany("Tracks")
                        .HasForeignKey("MediaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

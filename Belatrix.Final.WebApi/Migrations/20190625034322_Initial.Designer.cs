// <auto-generated />
using System;
using Belatrix.Final.WebApi.Repository.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Belatrix.Final.WebApi.Migrations
{
    [DbContext(typeof(BelatrixFinalDbContext))]
    [Migration("20190625034322_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnName("artist_id");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(160);

                    b.HasKey("AlbumId")
                        .HasName("album_id_pkey");

                    b.HasIndex("ArtistId")
                        .HasName("album_artist_idx");

                    b.ToTable("album");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(120);

                    b.HasKey("ArtistId")
                        .HasName("artist_id_pkey");

                    b.ToTable("artist");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(70);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(40);

                    b.Property<string>("Company")
                        .HasColumnName("company")
                        .HasMaxLength(80);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasMaxLength(24);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(40);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(24);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasMaxLength(40);

                    b.Property<int>("SupportRepId")
                        .HasColumnName("support_rep_id");

                    b.HasKey("CustomerId")
                        .HasName("customer_id_pkey");

                    b.HasIndex("SupportRepId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(70);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasMaxLength(24);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(20);

                    b.Property<DateTime>("HireDate")
                        .HasColumnName("hire_date")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(24);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasMaxLength(10);

                    b.Property<int>("ReportsToId")
                        .HasColumnName("reports_to_id");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasMaxLength(40);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(30);

                    b.HasKey("EmployeeId")
                        .HasName("employee_id_pkey");

                    b.HasIndex("ReportsToId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("GenreId")
                        .HasName("genre_id_pkey");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BillingAddress")
                        .HasColumnName("billing_address")
                        .HasMaxLength(70);

                    b.Property<string>("BillingCity")
                        .HasColumnName("billing_city")
                        .HasMaxLength(40);

                    b.Property<string>("BillingCountry")
                        .HasColumnName("billing_country")
                        .HasMaxLength(40);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnName("billing_postal_code")
                        .HasMaxLength(10);

                    b.Property<string>("BillingState")
                        .HasColumnName("billing_state")
                        .HasMaxLength(40);

                    b.Property<int>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnName("invoice_date")
                        .HasColumnType("date");

                    b.Property<decimal>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("total")
                        .HasColumnType("numeric(10,2)")
                        .HasDefaultValueSql("0");

                    b.HasKey("InvoiceId")
                        .HasName("invoice_id_pkey");

                    b.HasIndex("CustomerId");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("InvoiceId")
                        .HasColumnName("invoice_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<int>("TrackId")
                        .HasColumnName("track_id");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("unit_price")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("InvoiceLineId")
                        .HasName("invoice_line_id_pkey");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TrackId");

                    b.ToTable("invoice_line");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.MediaType", b =>
                {
                    b.Property<int>("MediaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(120);

                    b.HasKey("MediaTypeId")
                        .HasName("media_type_id_pkey");

                    b.ToTable("media_type");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(120);

                    b.HasKey("PlaylistId")
                        .HasName("playlist_id_pkey");

                    b.ToTable("playlist");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnName("playlist_id");

                    b.Property<int>("TrackId")
                        .HasColumnName("track_id");

                    b.HasKey("PlaylistId", "TrackId")
                        .HasName("playlist_track_id_pkey");

                    b.HasIndex("TrackId");

                    b.ToTable("playlist_track");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnName("album_id");

                    b.Property<int>("Bytes")
                        .HasColumnName("bytes");

                    b.Property<string>("Composer")
                        .HasColumnName("composer")
                        .HasMaxLength(220);

                    b.Property<int>("GenreId")
                        .HasColumnName("genre_id");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int>("MediaTypeId")
                        .HasColumnName("media_type_id");

                    b.Property<int>("MilliSeconds")
                        .HasColumnName("milli_seconds");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(120);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("unit_price")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("TrackId")
                        .HasName("track_id_pkey");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.HasIndex("MediaTypeId");

                    b.ToTable("track");
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Album", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("album__reference_artist_id__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Customer", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Employee", "SupportRep")
                        .WithMany("Customers")
                        .HasForeignKey("SupportRepId")
                        .HasConstraintName("customer__reference_employee__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Employee", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Employee", "ReportsTo")
                        .WithMany("InChargeOf")
                        .HasForeignKey("ReportsToId")
                        .HasConstraintName("employee__reference_employee__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Invoice", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("invoice__reference_customer_id__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.InvoiceLine", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("invoice_line__reference_invoice_id__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Track", "Track")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("invoice_line__reference_track_id__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.PlaylistTrack", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Playlist", "PlayList")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .HasConstraintName("playlist_track__reference_playlist__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Track", "Track")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("playlist_track__reference_track__fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Final.WebApi.Models.Track", b =>
                {
                    b.HasOne("Belatrix.Final.WebApi.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("track__reference_album_id_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("track__reference_genre_id_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belatrix.Final.WebApi.Models.MediaType", "MediaType")
                        .WithMany("Tracks")
                        .HasForeignKey("MediaTypeId")
                        .HasConstraintName("track__reference_media_type_id_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
